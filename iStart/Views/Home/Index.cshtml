@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model List<iStart.Models.UserRegistrationViewModel>

<style>
    .text-center {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0;
    }

    .icon-btn {
        background: none;
        border: none;
        padding: 0;
        margin: 0;
        cursor: pointer;
        color: #000;
        font-size: 16px;
    }

        .icon-btn:hover {
            color: #007bff;
        }

    .edit-btn {
        margin-right: auto;
    }
</style>
<link rel="stylesheet" href="~/css/site.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<div class="container mt-5">

    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>Dashboard</h2>
        <div class="d-flex align-items-center">
            <div class="dropdown me-2">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="rowsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    Rows: @Model.Count
                </button>
                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="rowsDropdown">
                    <li><a class="dropdown-item" href="#">5</a></li>
                    <li><a class="dropdown-item" href="#">10</a></li>
                    <li><a class="dropdown-item" href="#">25</a></li>
                    <li><a class="dropdown-item" href="#">50</a></li>
                </ul>
            </div>

            <button class="btn btn-primary me-2" id="downloadBtn">
                <i class="fas fa-download me-1"></i> Download
            </button>

            <button class="btn btn-dark" onclick="location.href='@Url.Action("NewEmployee", "NewEmployee")'">New +</button>
        </div>
    </div>

    <table class="table table-bordered table-striped">
        <thead class="table-light">
            <tr>
                <th>S.No</th>
                <th>Name</th>
                <th>Email</th>
                <th>Status</th>
                <th>Edit</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Count > 0)
            {
                for (int i = 0; i < Model.Count; i++)
                {
                    var user = Model[i];
                    <tr>
                        <td>@(i + 1)</td>
                        <td>
                            <input type="text" id="nameInput_@i" value="@user.Name" class="form-control form-control-sm" disabled />
                        </td>
                        <td>
                            <input type="text" id="emailInput_@i" value="@user.Email" class="form-control form-control-sm" disabled />
                        </td>
                        <td>Active</td>
                        <td class="text-center">
                            <button class="btn btn-sm icon-btn" type="button" id="editBtn_@i" onclick="enableEdit(@i)">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-sm icon-btn d-none" type="button" id="saveBtn_@i" onclick="saveEdit(@i)">
                                <i class="fas fa-save"></i>
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5">No users found.</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script>
    document.getElementById("downloadBtn").addEventListener("click", function () {
        const rows = document.querySelectorAll("tbody tr");
        let csv = [];

        rows.forEach(row => {
            const cols = row.querySelectorAll("td");
            let rowData = [];
            cols.forEach((col, index) => {
                if (index < 10) {
                    let value = col.innerText.trim().replace(/,/g, "");
                    rowData.push(`"${value}"`);
                }
            });
            csv.push(rowData.join(","));
        });

        const csvContent = "data:text/csv;charset=utf-8," + csv.join("\n");
        const encodedUri = encodeURI(csvContent);
        const link = document.createElement("a");
        link.setAttribute("href", encodedUri);
        link.setAttribute("download", "employee_data.csv");
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    });
</script>
<script>
    function enableEdit(index) {
        document.getElementById(`nameInput_${index}`).disabled = false;
        document.getElementById(`emailInput_${index}`).disabled = false;
        document.getElementById(`editBtn_${index}`).classList.add("d-none");
        document.getElementById(`saveBtn_${index}`).classList.remove("d-none");
    }

    function saveEdit(index)
    {
        const updatedName = document.getElementById(`nameInput_${index}`).value;
        const updatedEmail = document.getElementById(`emailInput_${index}`).value;
        alert("Saving new name: " + updatedName + ", email: " + updatedEmail);

        document.getElementById(`nameInput_${index}`).disabled = true;
        document.getElementById(`emailInput_${index}`).disabled = true;
        document.getElementById(`editBtn_${index}`).classList.remove("d-none");
        document.getElementById(`saveBtn_${index}`).classList.add("d-none");
    }
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
